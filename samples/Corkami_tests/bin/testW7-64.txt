Low alignments:
tinyW7_3264.exe:
 * tiny 268 bytes PE32 (W7 32b/64b)
maxsec_lowaligW7.exe:
 * Low alignment PE with 6666 sections (W7)
nosectionW7.exe:
 * Low alignment PE with no section (W7)
maxsecW7.exe:
 * PE with 8192 code sections (W7)
65535sects.exe:
 * 65535 physically identical, virtually executed sections
appsectableW7.exe:
 * section table in appended data (W7)
apphdrW7.exe:
 * NT headers in appended data (W7)
foldedhdrW7.exe:
 * PE header overwritten on loading (W7)
manyimportsW7.exe:
 * many fake imports, ignored by terminator set by TLS AoI (W7)
imports_apimsW7.exe:
 * api-ms-* redirection (Windows7)
imports_tinyW7.exe:
 * tiny imports (W7)
lfanew_relocW7.exe:
 * relocated e_lfanew with dual PE headers and split DataDirectories

64b specific:
normal64.exe:
 * a standard PE32+ (imports, standard alignments)
ibknoreloc64.exe:
 * kernel IB + RIP-relative code (PE32+)
tls64.exe:
 - callback called
 * a standard PE32+ with TLS
no_dd64.exe:
 * a PE32+ with no data directory, resolving imports manually
relocsstripped64.exe:
 * a PE32+ using relocations, even if RELOCS_STRIPPED is set (Delta: 0bc908d949e940000h)
seh_change64.exe:
 * a 64b PE with an exception handler address modified on the fly
exceptions.exe:
 * a 64b PE making use of an Exception DataDirectory
ldrsnaps64.exe:
 * a PE32+ enabling LoaderSnaps via its LoadConfig DataDirectory (GlobalFlags: 00000402)
tinyW7x64.exe:
 * tiny 268 bytes PE32+ (W7 64b only)

OS Specific:
tls_aoiOSDET.exe:
 * TLS AoI => W7
